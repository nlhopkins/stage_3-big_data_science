filter(absorbance == max(absorbance))$protein == a254)])
sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)$vol[sec$protein == a254])
sec$protein == a254
sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)$vol[sec$protein == "a254"])
sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)$vol[(sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance))$protein == "a280")])
(sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))$vol[(sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))$protein == "280"]
sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))$protein == "280"
sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))
filter(absorbance == max(absorbance))$protein == "280"]
(sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))$vol[(sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))$protein == "280"]
(sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))$protein == "280"
(sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))$vol[(sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))$protein == "a280"]
sec_elution <-
function(x) {(sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))$vol[(sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))$protein == x]}
a280_elution <- sec_elution("a280")
a280_elution
sec_mw <-
function(x) {
exp((
sec_elution(x) - lm(sec_standards$vol ~ sec_standards$logmw)$coefficients[1]
) / lm(sec_standards$vol ~ sec_standards$logmw)$coefficients[2]
)
}
a280_mw <- sec_mw("a280")
a254_mw <- sec_mw("a254")
a280_mw
a254_mw
sec_mw <-
function(x) {
exp((
sec_elution(x) - lm(sec_standards$vol ~ sec_standards$logmw)$coefficients[1]
) / lm(sec_standards$vol ~ sec_standards$logmw)$coefficients[2]
)
}
sec_elution <-
function(x) {(sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))$vol[(sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance)))$protein == x]}
a280_elution <- sec_elution("a280")
a254_elution <- sec_elution("a254")
a280_mw <- sec_mw("a280")
a254_mw <- sec_mw("a254")
sec_plot <- sec %>%
ggplot(aes(x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
labels = c("A280", "A254"),
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
ggsave(
"figures/sec_plot.pdf",
height = 15,
width = 20,
unit = "cm"
)
ggplotly(align = "center")
sec_plot <- sec %>%
ggplot(aes(x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
labels = c("A280", "A254"),
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
ggsave(
"figures/sec_plot.pdf",
height = 15,
width = 20,
unit = "cm"
)
ggplotly(align = "center")
sec_plot <- sec %>%
ggplot(aes(x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
labels = c("A280", "A254"),
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
ggsave(
"figures/sec_plot.pdf",
height = 15,
width = 20,
unit = "cm"
)
sec_plot
ggplotly(align = "center")
ggsave(
"figures/sec_plot.pdf",
height = 15,
width = 20,
unit = "cm"
)
ggplotly(align = "center")
sec_plot <- sec %>%
ggplot(aes(x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
labels = c("A280", "A254"),
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
ggsave(
"figures/sec_plot.pdf",
height = 15,
width = 20,
unit = "cm"
)
ggplotly(sec_plot_align = "center")
sec_plot
sec_plot <- sec %>%
ggplot(aes(x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
ggsave(
"figures/sec_plot.pdf",
height = 15,
width = 20,
unit = "cm"
)
ggplotly(align = "center")
sec_plot <- sec %>%
ggplot(aes(x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
labels = c("A254", "A280"),
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
ggsave(
"figures/sec_plot.pdf",
height = 15,
width = 20,
unit = "cm"
)
ggplotly(align = "center")
sec_plot
sec_plot <- sec %>%
ggplot(aes(x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
labels = c("A254", "A280"),
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
ggsave(
"figures/sec_plot.pdf",
height = 15,
width = 20,
unit = "cm"
)
ggplotly(align = "center")
sec_plot <- sec %>%
ggplot(aes(x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
labels = c("A254", "A280"),
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
ggplotly(align = "center")
ggsave(
"figures/sec_plot.pdf",
height = 15,
width = 20,
unit = "cm"
)
ggplotly(align = "center")
sec_plot <- sec %>%
ggplot(aes(x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
labels = c("A254", "A280"),
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
ggsave(
"figures/sec_plot.pdf",
height = 15,
width = 20,
unit = "cm"
)
ggplotly(align = "center")
sec
sec_plot <- sec %>%
mutate(protein = recode("a280" = "A280", "a254" = "A254")) %>%
ggplot(aes(x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
labels = c("A254", "A280"),
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
sec %>%
mutate(protein = recode("a280" = "A280", "a254" = "A254"))
sec_plot <- sec %>%
mutate(protein = recode(protein, "a280" = "A280", "a254" = "A254")) %>%
ggplot(aes(x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
labels = c("A254", "A280"),
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
ggsave(
"figures/sec_plot.pdf",
height = 15,
width = 20,
unit = "cm"
)
ggplotly(align = "center")
sec_plot <- sec %>%
mutate(protein = recode(protein, "a280" = "A280", "a254" = "A254")) %>%
ggplot(aes(x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
ggsave(
"figures/sec_plot.pdf",
height = 15,
width = 20,
unit = "cm"
)
ggplotly(align = "center")
sec_plot
a280_elution <- round(sec_elution("a280"), digits = 2)
a280_elution
a254_elution <- round(sec_elution("a254"), digits = 2)
a254_elution
knitr::write_bib(
c(
"base",
"RefManageR",
"tidyverse",
"rmarkdown",
"plotly",
"ggpubr",
"kableExtra",
"showtext",
"ggplot2"
),
width = 80,
prefix = "",
file = "bibliography/pkgs.bib"
)
`r Cite(pkgs, c("ggplot2", "plotly", "plotly2020))`
r Cite(pkgs, c("ggplot2", "plotly", "plotly2020"))
Cite(pkgs, c("ggplot2", "plotly", "plotly2020"))
knitr::write_bib(
c(
"base",
"RefManageR",
"tidyverse",
"rmarkdown",
"plotly",
"ggpubr",
"kableExtra",
"showtext",
"ggplot2"
),
width = 80,
prefix = "",
file = "bibliography/pkgs.bib"
)
RefManageR::BibOptions(
check.entries = FALSE,
bib.style = "authoryear",
cite.style = "authoryear",
style = "markdown",
hyperlink = FALSE,
dashed = FALSE,
longnamesfirst = FALSE,
max.names = 2
)
refs <-
RefManageR::ReadBib("bibliography/refs.bib", check = FALSE)
pkgs <-
RefManageR::ReadBib("bibliography/pkgs.bib", check = FALSE)
refs
RefManageR::BibOptions(
check.entries = FALSE,
bib.style = "authoryear",
cite.style = "authoryear",
style = "html",
hyperlink = TRUE,
dashed = FALSE,
longnamesfirst = FALSE,
max.names = 2
)
refs <-
RefManageR::ReadBib("bibliography/refs.bib", check = FALSE)
pkgs <-
RefManageR::ReadBib("bibliography/pkgs.bib", check = FALSE)
RefManageR::BibOptions(
check.entries = FALSE,
bib.style = "authoryear",
cite.style = "authoryear",
style = "html",
hyperlink = TRUE,
dashed = FALSE,
longnamesfirst = FALSE,
max.names = 1
)
refs <-
RefManageR::ReadBib("bibliography/refs.bib", check = FALSE)
pkgs <-
RefManageR::ReadBib("bibliography/pkgs.bib", check = FALSE)
RefManageR::BibOptions(
check.entries = FALSE,
bib.style = "authoryear",
cite.style = "vancouver",
style = "markdown",
hyperlink = TRUE,
dashed = FALSE,
longnamesfirst = FALSE,
max.names = 2
)
refs <-
RefManageR::ReadBib("bibliography/refs.bib", check = FALSE)
pkgs <-
RefManageR::ReadBib("bibliography/pkgs.bib", check = FALSE)
knitr::write_bib(
c(
"base",
"RefManageR",
"tidyverse",
"rmarkdown",
"plotly",
"ggpubr",
"kableExtra",
"showtext",
"ggplot2"
),
width = 80,
prefix = "",
file = "bibliography/pkgs.bib"
)
knitr::include_graphics("images/mu_transposition.jpg")
knitr::include_graphics("images/mu_transposition.jpg")
# Table of the full PCR dataset
pcr_full %>%
select(-primer, -gel_length) %>%
knitr::kable(
caption = "The actual amplicon sizes were calculated using the linear regression equation \\@ref(eq:log) acquired by linear regression analysis of the PCR ladder bands. Size Difference compares the expected and actual amplicon sizes.",
booktabs = T,
digits = 2,
col.names = c(
"Library",
"Amplicon",
"Distance (cm)",
"Expected Size (bp)",
"Relative Front (Rf)",
"Log(Rf)",
"Actual Size (bp)",
"Size Difference (%)"
)
) %>%
collapse_rows(columns = 1) %>%
kable_styling(font_size = 15, position = "center")
count_words("report.Rmd")
count_words("report.Rmd")
count_words("report.Rmd")
devtools::install_github("benmarwick/wordcountaddin", type = "source", dependencies = TRUE)
library(wordcountaddin)
count_words("report.Rmd")
wordcountaddin::count_words("report.Rmd")
wordcountaddin::word_count("report.Rmd")
library(tidyverse)
library(plotly)
library(ggpubr)
library(RefManageR)
library(kableExtra)
library(showtext)
library(wordcountaddin)
wordcount("README.md")
library(tidyverse)
library(plotly)
library(ggpubr)
library(RefManageR)
library(kableExtra)
library(showtext)
library(wordcountaddin)
wordcount("report.Rmd")
wordcountaddin::wordcount("report.Rmd")
count_words("report.Rmd")
wordcountaddin::count_words("report.Rmd")
word_count("report.Rmd")
wordcountaddin::word_count("report.Rmd")`
`r word_count("report.Rmd") + word_count("README.md")`
word_count("report.Rmd") + word_count("README.md")
