caption = "SEC Absorbencies for a254 & a280",
digits = 2,
col.names = c("Volume",
"Protein",
"Absorbance")
) %>%
kable_styling(font_size = 15) %>%
select(Protein) %>%
collapse_rows(columns = 1)
sec[2:4] %>%
knitr::kable(
caption = "SEC Absorbencies for a254 & a280",
digits = 2,
col.names = c("Volume",
"Protein",
"Absorbance")
) %>%
kable_styling(font_size = 15) %>%
select(Protein, `Volume`, `Absorbance`) %>%
collapse_rows(columns = 1)
kable_styling(font_size = 15) %>%
sec[2:4] %>%
knitr::kable(
caption = "SEC Absorbencies for a254 & a280",
digits = 2,
col.names = c("Volume",
"Protein",
"Absorbance")
) %>%
kable_styling(font_size = 15) %>%
select(Protein, c(`Volume`, `Absorbance`) %>%
collapse_rows(columns = 1)
sec[2:4] %>%
knitr::kable(
caption = "SEC Absorbencies for a254 & a280",
digits = 2,
col.names = c("Volume",
"Protein",
"Absorbance")
) %>%
kable_styling(font_size = 15) %>%
select(Protein, Volume, Absorbance`) %>%
collapse_rows(columns = 1)
sec[2:4] %>%
knitr::kable(
caption = "SEC Absorbencies for a254 & a280",
digits = 2,
col.names = c("Volume",
"Protein",
"Absorbance")
) %>%
kable_styling(font_size = 15) %>%
select(Protein, Volume, Absorbance) %>%
collapse_rows(columns = 1)
sec
sec[2:4] %>%
knitr::kable(
caption = "SEC Absorbencies for a254 & a280",
digits = 2,
col.names = c("Volume",
"Protein",
"Absorbance")
) %>%
kable_styling(font_size = 15) %>%
select(protein, vol, absorbance) %>%
collapse_rows(columns = 1)
sec[2:4] %>%
select(protein, vol, absorbance) %>%
knitr::kable(
caption = "SEC Absorbencies for a254 & a280",
digits = 2,
col.names = c("Volume",
"Protein",
"Absorbance")
) %>%
kable_styling(font_size = 15) %>%
collapse_rows(columns = 1)
standards <- standards %>%
rename(
c(
"Ferritin" = curve_ferritin,
"IgG" = curve_ig_g,
"Myoglobin" = curve_myoglobin,
"Ovalbumin" = curve_ovalbumin,
"Thyroglobulin" = curve_thyroglobulin,
"Transferrin" = curve_transferrin,
"Vitamin B12" = curve_vitamin_b12
)
) %>%
pivot_longer(cols = !c(x, vol),
names_to = "protein",
values_to = "absorbance_units")
standards <- standards %>%
rename(
c(
"Ferritin" = curve_ferritin,
"IgG" = curve_ig_g,
"Myoglobin" = curve_myoglobin,
"Ovalbumin" = curve_ovalbumin,
"Thyroglobulin" = curve_thyroglobulin,
"Transferrin" = curve_transferrin,
"Vitamin B12" = curve_vitamin_b12
)
) %>%
pivot_longer(cols = !c(x, vol),
names_to = "protein",
values_to = "absorbance_units")
# Load the PCR data
pcr <- read.csv("../data/data-raw/pcr.csv", header = TRUE) %>%
janitor::clean_names()
# Load the PCR calibration data for the gDNA library
gdna_calibration <-
read.csv("../data/data-raw/pcr_gdna_calibration.csv", header = TRUE) %>%
janitor::clean_names()
# Load the PCR calibration data for the cDNA library
cdna_calibration <-
read.csv("../data/data-raw/pcr_cdna_calibration.csv", header = TRUE) %>%
janitor::clean_names()
# Load the EMSA data
emsa <- read.csv("../data/data-raw/emsa.csv", header = TRUE) %>%
janitor::clean_names()
# Load the EMSA calibration data
emsa_calibration <-
read.csv("../data/data-raw/emsa_calibration.csv", header = TRUE) %>%
janitor::clean_names()
# Load the SEC standards data
standards <-
read.csv("../data/data-raw/sec_std.csv", header = TRUE) %>%
janitor::clean_names()
# Load the SEC data
sec <-
read.csv("../data/data-raw/sec_im9higam.csv", header = TRUE) %>%
janitor::clean_names()
sec[2:4] %>%
select(protein, vol, absorbance) %>%
knitr::kable(
caption = "SEC Absorbencies for a254 & a280",
digits = 2,
col.names = c("Volume",
"Protein",
"Absorbance")
) %>%
kable_styling(font_size = 15) %>%
collapse_rows(columns = 1)
sec
knitr::opts_chunk$set(
include = FALSE,
echo = FALSE,
fig.align = "center",
fig.retina = 3,
message = FALSE,
warning = FALSE
)
source("../R/00-pkgs.R", local = knitr::knit_global())
knitr::write_bib(
c(
"base",
"RefManageR",
"tidyverse",
"rmarkdown",
"plotly",
"ggpubr",
"htmltools",
"kableExtra"
),
width = 80,
prefix = "",
file = "../bibliography/pkgs.bib"
)
RefManageR::BibOptions(
check.entries = FALSE,
bib.style = "authoryear",
cite.style = "authoryear",
style = "markdown",
hyperlink = FALSE,
dashed = FALSE,
longnamesfirst = FALSE,
max.names = 3
)
refs <-
RefManageR::ReadBib("../bibliography/refs.bib", check = FALSE)
pkgs <-
RefManageR::ReadBib("../bibliography/pkgs.bib", check = FALSE)
source("../R/themes.R", local = knitr::knit_global())
source("../functions/count_words.R", local = knitr::knit_global())
source("../functions/relative_front.R", local = knitr::knit_global())
source("../functions/pred_intercept_sec.R", local = knitr::knit_global())
source("../functions/pred_intercept_emsa.R", local = knitr::knit_global())
source("../functions/nls.R", local = knitr::knit_global())
# Load the PCR data
pcr <- read.csv("../data/data-raw/pcr.csv", header = TRUE) %>%
janitor::clean_names()
# Load the PCR calibration data for the gDNA library
gdna_calibration <-
read.csv("../data/data-raw/pcr_gdna_calibration.csv", header = TRUE) %>%
janitor::clean_names()
# Load the PCR calibration data for the cDNA library
cdna_calibration <-
read.csv("../data/data-raw/pcr_cdna_calibration.csv", header = TRUE) %>%
janitor::clean_names()
# Load the EMSA data
emsa <- read.csv("../data/data-raw/emsa.csv", header = TRUE) %>%
janitor::clean_names()
# Load the EMSA calibration data
emsa_calibration <-
read.csv("../data/data-raw/emsa_calibration.csv", header = TRUE) %>%
janitor::clean_names()
# Load the SEC standards data
standards <-
read.csv("../data/data-raw/sec_std.csv", header = TRUE) %>%
janitor::clean_names()
# Load the SEC data
sec <-
read.csv("../data/data-raw/sec_im9higam.csv", header = TRUE) %>%
janitor::clean_names()
standards <- standards %>%
rename(
c(
"Ferritin" = curve_ferritin,
"IgG" = curve_ig_g,
"Myoglobin" = curve_myoglobin,
"Ovalbumin" = curve_ovalbumin,
"Thyroglobulin" = curve_thyroglobulin,
"Transferrin" = curve_transferrin,
"Vitamin B12" = curve_vitamin_b12
)
) %>%
pivot_longer(cols = !c(x, vol),
names_to = "protein",
values_to = "absorbance_units")
sec <- sec %>%
pivot_longer(cols = starts_with("a"),
names_to = "protein",
values_to = "absorbance")
# Separate the PCR data set by DNA library for analysis
gdna <- pcr %>% # gDNA PCR data
filter(library == "gDNA")
cdna <- pcr %>% # cDNA
filter(library == "cDNA")
#gDNA
gdna_mod <- lm(data = gdna_calibration, log ~ rf)
#cDNA
cdna_mod <- lm(data = cdna_calibration, log ~ rf)
# gDNA
gdna <- gdna %>%
mutate(
rf = relative_front(gdna),
log = ((rf * gdna_mod$coefficients[2]) + gdna_mod$coefficients[1]),
actual_size = (10 ^ log),
diff = ((expected_size - actual_size) / expected_size * 100)
)
# cDNA
cdna <- cdna %>%
mutate(
rf = relative_front(cdna),
log = ((rf * cdna_mod$coefficients[2]) + cdna_mod$coefficients[1]),
actual_size = (10 ^ log),
diff = ((expected_size - actual_size) / expected_size * 100)
)
# join gDNA & cDNA
pcr_full <- full_join(gdna, cdna, by = NULL)
pcr_plot <- pcr_full %>%
ggplot(aes(
x = gene,
y = diff,
fill = library,
text = paste(
"Library: ",
library,
"<br>Gene: ",
gene,
"<br>Difference: ",
round(diff),
"%",
"<br>Expected Size (bp): ",
expected_size,
"<br>Actual Size (bp):",
round(actual_size)
)
)) + geom_col(position = "dodge") +
geom_hline(yintercept = 0, size = 0.25) +
mytheme() +
scale_fill_brewer(name = "DNA Library",
labels = c("cDNA", "gDNA"),
palette = "Set3",
) +
labs(y = "Percentage Difference to Expected Size", x = "Gene")
htmltools::div(ggplotly(pcr_plot, tooltip = c("text")), align = "center")
emsa <-
emsa %>% mutate(rf = round((
(gel_length - distance) / gel_length
), digits = 2))
emsa_calibration <- emsa_calibration %>% mutate(log = log(expected_size), rf = (gel_length - distance)/gel_length)
emsa_fit <- NLS(emsa)
emsa_rf = summary(emsa_fit)$coefficients[1, 1]
emsa_intercept = summary(emsa_fit)$coefficients[2, 1]
# Calculate the difference between the measured rf and predicted rf value
# This is needed for the residuals
# Calculate residuals to the fit
emsa_res <- emsa %>%
mutate(residuals = rf - predict(emsa_fit))
emsa <- emsa %>%
mutate(log = ((emsa$rf * emsa_rf) + emsa_intercept),
actual_size = (10^log))
emsa_footprint <- (max((emsa$actual_size) - 330000) / (30626.5 / 2))
emsa_plot <- emsa %>%
ggplot(aes(x = conc, y = rf)) +
geom_point(shape = 20,
size = 3,
colour = "black") +
stat_function(fun = pred_intercept_emsa, colour = "#66C2A4") +
mytheme() +
scale_y_continuous(expand = c(0.02, 0.02),
limits = c(0.3, 0.7),
breaks = seq(0.3, 0.7, by = 0.20)) +
scale_x_continuous(
expand = c(0.02, 0.02),
limits = c(0, 4),
breaks = seq(0, 8, by = 1)
) +
xlab(NULL) +
ylab(expression(paste(bold(
"Relative Front (a.U.)"
))))
# Plot the residuals and a line showing y = 0
emsa_res_plot <- emsa_res %>%
ggplot(aes(x = conc, y = residuals)) +
geom_point(shape = 20,
size = 3,
colour = "black") +
geom_hline(aes(yintercept = 0),
col = '#66C2A4',
size = .5) +
scale_x_continuous(
expand = c(0.02, 0.02),
limits = c(0, 4),
breaks = seq(0, 8, by = 1),
name = (expression(bold(
atop("Protein Concentration (Î¼M)", "Im9"["dimer"])
)))
) +
scale_y_continuous(
expand = c(0.02, 0.02),
limits = c(-0.1, 0.1),
breaks = seq(-0.1, 0.1, by = 0.1),
name = "Residual (a.U.)"
) + mytheme()
ggarrange(emsa_plot, emsa_res_plot, nrow = 2, ncol = 1, widths = c(2, 1/2))
mw_ev <- standards %>%
group_by(protein) %>%
filter(absorbance_units == max(absorbance_units)) %>%
summarise(vol) %>%
ungroup() %>%
mutate(
mw = recode(
protein,
"Thyroglobulin" = 669000,
"Ferritin" = 440000,
"IgG" = 150000,
"Transferrin" = 81000,
"Ovalbumin" = 43000,
"Myoglobin" = 17000,
"Vitamin B12" = 1355
),
logmw = log(mw)
)
linear_reg <- lm(mw_ev$vol ~ mw_ev$logmw)
intercept <- linear_reg$coefficients[1] # intercept value
slope <- linear_reg$coefficients[2] # slope value
# Getting the elution volume that corresponds to the maximum value of a curve
volgam <- sec %>%
group_by(protein) %>%
filter(absorbance == max(absorbance))
# Estimated MW from the 280 nm data
a280_mw <-
round(as.numeric(exp((
volgam$vol[1] - intercept
) / slope)), digits = 2)
# Estimated MW from the 254 nm data
a254_mw <-
round(as.numeric(exp((
volgam$vol[2] - intercept
) / slope)), digits = 2)
sec_footprint <-
abs(round(((a254_mw - a280_mw) / 660), digits = 2))
sec_plot <- sec %>%
ggplot(aes(
x = vol,
y = absorbance,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
labels = c("a280", "a254"),
palette = "Set2") +
scale_x_continuous(limits = c(13, 17)) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 100)) +
mytheme() +
xlab("Elution Volume (mL)") +
ylab("Absorbance (mAU)")
htmltools::div(ggplotly(sec_plot, align = "center"))
standards_plot <- standards %>%
ggplot(aes(
x = vol,
y = absorbance_units,
colour = protein),
show.legend = TRUE) +
geom_line() +
scale_colour_brewer(name = "Protein",
palette = "Set2") + # colour blind friendly
mytheme() +
scale_x_continuous(
expand = c(0, 0),
limits = c(9, 22),
breaks = seq(9, 22, by = 1),
name = "Elution Volume (mL)"
) + scale_y_continuous(
expand = c(0, 0),
limits = c(0, 100),
breaks = seq(0, 100, by = 10),
name = "A280 Absorbance Units (A.U.)"
)
htmltools::div(ggplotly(standards_plot, align = "center"))
table <- sec[2:4] %>%
select(protein, vol, absorbance) %>%
knitr::kable(
caption = "SEC Absorbencies for a254 & a280",
digits = 2,
col.names = c("Volume",
"Protein",
"Absorbance")
) %>%
kable_styling(font_size = 15) %>%
collapse_rows(columns = 1)
table
table <- sec[2:4] %>%
knitr::kable(
caption = "SEC Absorbencies for a254 & a280",
digits = 2,
col.names = c("Volume",
"Protein",
"Absorbance")
) %>%
kable_styling(font_size = 15) %>%
select(Protein, Volume, Absorbance) %>%
collapse_rows(columns = 1)
table <- sec[2:4] %>%
pivot_wider(protein)
table
table <- sec[2:4] %>%
pivot_wider(protein)
sec
table <- sec[2:4] %>%
pivot_wider(id_cols = protein)
table
table <- sec[2:4] %>%
pivot_wider(cols = protein)
table <- sec[2:4] %>%
pivot_wider(cols = protein,
names_to = "i12",
values_to = "abc")
table <- sec[2:4] %>%
pivot_wider(id_cols = protein,
names_to = "i12",
values_to = "abc")
table <- sec[2:4] %>%
pivot_wider(id_cols = absorbance,
names_from = "protein",
values_to = "absorbance")
sec
table <- sec %>%
pivot_wider(id_cols = x,
names_from = "protein",
values_to = "absorbance")
table <- sec %>%
pivot_wider(names_from = "protein",
values_to = "absorbance")
table <- sec %>%
pivot_wider(names_from = "protein",
values_from = "absorbance")
table
table <- sec[2:4] %>%
pivot_wider(names_from = "protein",
values_from = "absorbance") %>%
knitr::kable(
caption = "SEC Absorbencies for a254 & a280",
digits = 2,
col.names = c("Volume",
"Protein",
"Absorbance")
) %>%
kable_styling(font_size = 15) %>%
collapse_rows(columns = 1)
table
table <- sec[2:4] %>%
pivot_wider(names_from = "protein",
values_from = "absorbance")
table
table <- sec[2:4] %>%
pivot_wider(names_from = "protein",
values_from = "absorbance") %>%
knitr::kable(
caption = "SEC Absorbencies for a254 & a280",
digits = 2,
col.names = c("Volume",
"a254",
"a280")
) %>%
kable_styling(font_size = 15) %>%
collapse_rows(columns = 1)
table
